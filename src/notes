Redux has three process 
which are actions => reducer => store.

The store is Just a place that handles all the state the app need. 
when creating a store it takes a reducer as it first argument.

const store = createStore(rootReducer); 

The reducer is just a pure function in react and their produce new states when there is an 
update in the state of the app. One principle of redux is never to mutate states. so the initial state of 
your app should never be changed.

For the reducer to function it needs an action.
The action is just an object, it defines the kind of operation it wants to execute.
It is best practice to put the actions in a function.

For an action to occur redux uses the dispatch function to trigger an  action.
You can access the current state of the application using getState()
Redux implements the subscribe to listen for changes.

React-redux is a small library for connectig react in an efficiently way... The major function to take note 
of is the connect.
The connect, connects react components with the redux store.
You use connect with two or three arguments depending on the use case.

The fundamental things to know are the: mapStateToProps and mapDispatchToPros functions.

mapStateToProps function connects a part of the redux state to the props of a react component. By doing so a connected 
react component will have access to the exact part of the store it needs.

mapDispatchToPros function works similarly but for actions, it connects redux actions to react props.

To start of connecting redux with react you use the Provider which is an higher order component from react-redux
The Provider wrap your react app and make it aware of the redux sttore.
